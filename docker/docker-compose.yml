version: "3.7"
services:
  app:
    build:
      context: ${ROOT_DIR}/docker/php-fpm
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    working_dir: /var/www/
    env_file:
      - ${ROOT_DIR}/config/.env
    volumes:
      - ${ROOT_DIR}/src/php-fpm/:/var/www/
      - ${ROOT_DIR}/config/.env:/var/www/.env
      - ${ROOT_DIR}/docker/php-fpm/extend-php.ini:/usr/local/etc/php/conf.d/extend-php.ini
    depends_on:
      - mysql
    networks:
      - nginx-network
      - db-network

  mysql:
    image: mysql:latest
    container_name: ${APP_NAME}-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ${ROOT_DIR}/docker/mysql/:/var/lib/mysql/
    networks:
      - db-network

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "8000:80"
    volumes:
      - ${ROOT_DIR}/src/php-fpm:/var/www
      - ${ROOT_DIR}/docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ${ROOT_DIR}/logs/nginx/:/var/log/nginx
    networks:
      - nginx-network

  nuxt:
    build:
      context: ${ROOT_DIR}/src/nuxt
      dockerfile: ${ROOT_DIR}/docker/nuxt/Dockerfile
      target: 'develop-stage'
    ports:
      - "3000:3000"
    container_name: ${APP_NAME}-nuxtjs
    restart: unless-stopped
    volumes:
      - ${ROOT_DIR}/src/nuxt:/app
      - /app/node_modules/
    command: [ "npm", "run", "dev" ]
    environment:
     - CHOKIDAR_USEPOLLING=true
    networks:
     - nginx-network

networks:
  db-network:
  nginx-network:
    driver: bridge
